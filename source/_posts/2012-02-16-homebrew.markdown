---
layout: post
title: "Homebrew"
date: 2012-02-16 13:33
comments: true
categories: mac
---
 

####删除Homebrew:

{% codeblock lang:sh %}
cd `brew –prefix`
rm -rf Cellar
brew prune
rm -rf Library .git .gitignore bin/brew README.md share/man/man1/brew
rm -rf ~/Library/Caches/Homebrew
{% endcodeblock %}

###Homebrew's "brew doctor" - edit .bashrc

If you run into problems with Homebrew it will always suggest to you to run 'brew doctor', which will check your Homebrew installation for common problems. For me, it looked like this:
{% codeblock lang:sh %}
     Jonas$ brew doctor
     /usr/bin is in your PATH before Homebrew's bin. This means that system-provided programs will be used before Homebrew-provided ones. This is an issue if you install, for instance, Python.

    Consider editing your .bashrc to put:
    /usr/local/bin
    ahead of /usr/bin in your $PATH.

    Some brews install binaries to sbin instead of bin, but Homebrew's sbin was not found in your path.

    Consider editing your .bashrc to add:
    /usr/local/sbin
    to $PATH.
{% endcodeblock %}
Now, obviously I started googleing on how to edit my .bashrc, but I didn't really find a good tutorial on the first try, that's why I'm writing this one. After some more searching around I was able to figure out a solution that I'll explain below.
On a standard Mac OS X Snow Leopard installation you won't have a .bashrc file. However you should have a .profile file which does similar things. Here's an article about the difference between .bashrc, .bash_profile and .profile files (the comments on that article provide some further clarification).
From what I understand it's best to edit .profile in your home folder. To do this, start Terminal and type

open -t ~/.profile

This will open .profile with your default text editor.

Then add the following line (the file might be empty so far):

  export PATH="/usr/local/bin:$PATH:/usr/local/sbin"

Restart Terminal, run 'brew doctor' again and everything should be fine.
A short explanation on how that works: To see your current PATH you can run 'echo $PATH'. The command above in .profile now simply puts '/usr/local/bin' in front of your PATH and '/usr/local/sbin' at the end of it and sets it as your new PATH.

> 本该淡淡然~~~